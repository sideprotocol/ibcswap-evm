/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IBlockScopeVesting,
  IBlockScopeVestingInterface,
} from "../../../contracts/interfaces/IBlockScopeVesting";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "releaseTime",
        type: "uint256",
      },
    ],
    name: "TokensVested",
    type: "event",
  },
] as const;

export class IBlockScopeVesting__factory {
  static readonly abi = _abi;
  static createInterface(): IBlockScopeVestingInterface {
    return new utils.Interface(_abi) as IBlockScopeVestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBlockScopeVesting {
    return new Contract(address, _abi, signerOrProvider) as IBlockScopeVesting;
  }
}
