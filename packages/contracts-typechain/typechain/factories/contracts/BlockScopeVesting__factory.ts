/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BlockScopeVesting,
  BlockScopeVestingInterface,
} from "../../contracts/BlockScopeVesting";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "releaseTime",
        type: "uint256",
      },
    ],
    name: "TokensVested",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "newOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "releaseTime",
        type: "uint256",
      },
    ],
    name: "setVesting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "vestings",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "releaseTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620014cc380380620014cc8339818101604052810190620000379190620001d5565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000207565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200019d8262000170565b9050919050565b620001af8162000190565b8114620001bb57600080fd5b50565b600081519050620001cf81620001a4565b92915050565b600060208284031215620001ee57620001ed6200016b565b5b6000620001fe84828501620001be565b91505092915050565b6112b580620002176000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063d4ee1d9011610066578063d4ee1d90146100d4578063daf49863146100f2578063e0a668b414610124578063f2fde38b14610140578063fc0c546a1461015c57610093565b806348c54b9d14610098578063715018a6146100a257806379ba5097146100ac5780638da5cb5b146100b6575b600080fd5b6100a061017a565b005b6100aa610401565b005b6100b4610415565b005b6100be610597565b6040516100cb9190610aea565b60405180910390f35b6100dc6105c0565b6040516100e99190610aea565b60405180910390f35b61010c60048036038101906101079190610b36565b6105e6565b60405161011b93929190610b97565b60405180910390f35b61013e60048036038101906101399190610bfa565b61061d565b005b61015a60048036038101906101559190610b36565b6108b5565b005b610164610939565b6040516101719190610cac565b60405180910390f35b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015411610204576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fb90610d24565b60405180910390fd5b8060020160009054906101000a900460ff1615610256576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024d90610d90565b60405180910390fd5b806001015442101561029d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029490610dfc565b60405180910390fd5b60018160020160006101000a81548160ff021916908315150217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3383600001546040518363ffffffff1660e01b815260040161031b929190610e1c565b602060405180830381600087803b15801561033557600080fd5b505af1158015610349573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036d9190610e71565b6103ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a390610eea565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e43082600001546040516103f69190610f0a565b60405180910390a250565b61040961095f565b61041360006109dd565b565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049c90610f97565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166104e6610597565b73ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3610553600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166108b5565b6000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16905083565b61062561095f565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610695576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068c90611003565b60405180910390fd5b600082116106d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cf9061106f565b60405180910390fd5b42811161071a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071190611101565b60405180910390fd5b604051806060016040528083815260200182815260200160001515815250600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550905050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161080d93929190611121565b602060405180830381600087803b15801561082757600080fd5b505af115801561083b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085f9190610e71565b508273ffffffffffffffffffffffffffffffffffffffff167fe37037c1b3b5a7099de9b4ff0b386af195061ad990fcf5c0c5f84b95d328f76683836040516108a8929190611158565b60405180910390a2505050565b6108bd61095f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561092d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610924906111f3565b60405180910390fd5b610936816109dd565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610967610aa1565b73ffffffffffffffffffffffffffffffffffffffff16610985610597565b73ffffffffffffffffffffffffffffffffffffffff16146109db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d29061125f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ad482610aa9565b9050919050565b610ae481610ac9565b82525050565b6000602082019050610aff6000830184610adb565b92915050565b600080fd5b610b1381610ac9565b8114610b1e57600080fd5b50565b600081359050610b3081610b0a565b92915050565b600060208284031215610b4c57610b4b610b05565b5b6000610b5a84828501610b21565b91505092915050565b6000819050919050565b610b7681610b63565b82525050565b60008115159050919050565b610b9181610b7c565b82525050565b6000606082019050610bac6000830186610b6d565b610bb96020830185610b6d565b610bc66040830184610b88565b949350505050565b610bd781610b63565b8114610be257600080fd5b50565b600081359050610bf481610bce565b92915050565b600080600060608486031215610c1357610c12610b05565b5b6000610c2186828701610b21565b9350506020610c3286828701610be5565b9250506040610c4386828701610be5565b9150509250925092565b6000819050919050565b6000610c72610c6d610c6884610aa9565b610c4d565b610aa9565b9050919050565b6000610c8482610c57565b9050919050565b6000610c9682610c79565b9050919050565b610ca681610c8b565b82525050565b6000602082019050610cc16000830184610c9d565b92915050565b600082825260208201905092915050565b7f4e6f20746f6b656e7320746f20636c61696d0000000000000000000000000000600082015250565b6000610d0e601283610cc7565b9150610d1982610cd8565b602082019050919050565b60006020820190508181036000830152610d3d81610d01565b9050919050565b7f546f6b656e7320616c726561647920636c61696d656400000000000000000000600082015250565b6000610d7a601683610cc7565b9150610d8582610d44565b602082019050919050565b60006020820190508181036000830152610da981610d6d565b9050919050565b7f546f6b656e7320617265206e6f742079657420636c61696d61626c6500000000600082015250565b6000610de6601c83610cc7565b9150610df182610db0565b602082019050919050565b60006020820190508181036000830152610e1581610dd9565b9050919050565b6000604082019050610e316000830185610adb565b610e3e6020830184610b6d565b9392505050565b610e4e81610b7c565b8114610e5957600080fd5b50565b600081519050610e6b81610e45565b92915050565b600060208284031215610e8757610e86610b05565b5b6000610e9584828501610e5c565b91505092915050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b6000610ed4601583610cc7565b9150610edf82610e9e565b602082019050919050565b60006020820190508181036000830152610f0381610ec7565b9050919050565b6000602082019050610f1f6000830184610b6d565b92915050565b7f4f6e6c792074686520706f74656e7469616c206e6577206f776e65722063616e60008201527f20616363657074206f776e657273686970000000000000000000000000000000602082015250565b6000610f81603183610cc7565b9150610f8c82610f25565b604082019050919050565b60006020820190508181036000830152610fb081610f74565b9050919050565b7f496e76616c696420616464726573730000000000000000000000000000000000600082015250565b6000610fed600f83610cc7565b9150610ff882610fb7565b602082019050919050565b6000602082019050818103600083015261101c81610fe0565b9050919050565b7f416d6f756e742073686f756c642062652067726561746572207468616e203000600082015250565b6000611059601f83610cc7565b915061106482611023565b602082019050919050565b600060208201905081810360008301526110888161104c565b9050919050565b7f52656c656173652074696d652073686f756c6420626520696e2074686520667560008201527f7475726500000000000000000000000000000000000000000000000000000000602082015250565b60006110eb602483610cc7565b91506110f68261108f565b604082019050919050565b6000602082019050818103600083015261111a816110de565b9050919050565b60006060820190506111366000830186610adb565b6111436020830185610adb565b6111506040830184610b6d565b949350505050565b600060408201905061116d6000830185610b6d565b61117a6020830184610b6d565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006111dd602683610cc7565b91506111e882611181565b604082019050919050565b6000602082019050818103600083015261120c816111d0565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611249602083610cc7565b915061125482611213565b602082019050919050565b600060208201905081810360008301526112788161123c565b905091905056fea2646970667358221220c03238d93193894564e5e98389e25bb2f4afe73f976b39d407aa54704363d81c64736f6c63430008090033";

type BlockScopeVestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockScopeVestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockScopeVesting__factory extends ContractFactory {
  constructor(...args: BlockScopeVestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BlockScopeVesting> {
    return super.deploy(_token, overrides || {}) as Promise<BlockScopeVesting>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override attach(address: string): BlockScopeVesting {
    return super.attach(address) as BlockScopeVesting;
  }
  override connect(signer: Signer): BlockScopeVesting__factory {
    return super.connect(signer) as BlockScopeVesting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockScopeVestingInterface {
    return new utils.Interface(_abi) as BlockScopeVestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BlockScopeVesting {
    return new Contract(address, _abi, signerOrProvider) as BlockScopeVesting;
  }
}
